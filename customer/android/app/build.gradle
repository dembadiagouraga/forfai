plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def keystoreProperties = new Properties ()
def keystorePropertiesFile = rootProject.file ("key.properties")
if (keystorePropertiesFile.exists()) {keystoreProperties.load(new FileInputStream(keystorePropertiesFile))}
def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}


def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def dartDefines = [:]
if (project.hasProperty('dart-defines')) {
    dartDefines = dartDefines + project.property('dart-defines')
            .split(',')
            .collectEntries { entry ->
                def pair = new String(entry.decodeBase64(), 'UTF-8').split('=')
                pair.length == 2 ? [(pair.first()): pair.last()] : [:]
            }
}

android {
    namespace "forfai.customer"
    compileSdk 35
    ndkVersion "29.0.13599879"

    defaultConfig {
        applicationId "forfai.customer"
        minSdkVersion 24
        multiDexEnabled true
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        // Add null checks for resValue
        if (dartDefines.GOOGLE_MAPS_API_KEY != null) {
            resValue "string", "google_maps_api_key", dartDefines.GOOGLE_MAPS_API_KEY
        }
        if (dartDefines.FACEBOOK_APP_ID != null) {
            resValue "string", "facebook_app_id", dartDefines.FACEBOOK_APP_ID
        }
        if (dartDefines.FACEBOOK_CLIENT_TOKEN != null) {
            resValue "string", "facebook_client_token", dartDefines.FACEBOOK_CLIENT_TOKEN
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties["keyAlias"]
            keyPassword keystoreProperties["keyPassword"]
            storeFile keystoreProperties["storeFile"] ?file(keystoreProperties["storeFile"]) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
}

flutter {
    source '../..'
}

configurations.all {
    resolutionStrategy {
        force 'androidx.core:core-ktx:1.12.0'
        force 'androidx.core:core:1.12.0'
        force 'androidx.activity:activity:1.8.2'
        force 'androidx.fragment:fragment:1.6.2'
        force 'androidx.appcompat:appcompat:1.6.1'
    }
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:32.7.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.core:core:1.12.0'
    implementation 'androidx.activity:activity:1.8.2'
    implementation 'androidx.fragment:fragment:1.6.2'
    implementation 'androidx.appcompat:appcompat:1.6.1'
}
